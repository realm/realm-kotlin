headers = realm.h
headerFilter = realm.h
staticLibraries = librealm-ffi-static-dbg.a librealm-dbg.a librealm-parser-dbg.a librealm-object-store-dbg.a
libraryPaths.macos_x64 = ../external/core/build-macos_x64/src/realm/object-store/c_api ../external/core/build-macos_x64/src/realm ../external/core/build-macos_x64/src/realm/parser ../external/core/build-macos_x64/src/realm/object-store/
libraryPaths.ios_x64 = ../external/core/build-macos_x64/src/realm/object-store/c_api ../external/core/build-macos_x64/src/realm ../external/core/build-macos_x64/src/realm/parser ../external/core/build-macos_x64/src/realm/object-store/
linkerOpts = -lz -framework Foundation -framework CoreFoundation -framework Security

---
// FIXME These symbols seems to be undefined, so for now just adding them here
#include <dirent.h>
#include <fnmatch.h>
DIR * opendir$INODE64( char * dirName )
{
    return opendir( dirName );
}
struct dirent * readdir$INODE64( DIR * dir )
{
    return readdir( dir );
}

// These functions are a work around to avoid anonymous union not being supported in Kotlin/Native https://youtrack.jetbrains.com/issue/KT-43833
// which will call to `realm_wrapper.realm_set_value` using a `cValue<realm_value>` throw a
// type kotlinx.cinterop.CValue<realm_wrapper.realm_value{ realm_wrapper.realm_value_t }>  is not supported here: not a structure or too complex
static bool realm_set_value_string(realm_object_t* object, realm_col_key_t col, realm_string_t new_value, bool is_default) {
    realm_value_t value;
    value.type = RLM_TYPE_STRING;
    value.string = new_value;
    return realm_set_value(object, col, value, is_default);
}

static bool realm_set_value_int64(realm_object_t* object, realm_col_key_t col, int64_t new_value, bool is_default) {
    realm_value_t value;
    value.type = RLM_TYPE_INT;
    value.integer = new_value;
    return realm_set_value(object, col, value, is_default);
}

static bool realm_set_value_boolean(realm_object_t* object, realm_col_key_t col, bool new_value, bool is_default) {
    realm_value_t value;
    value.type = RLM_TYPE_BOOL;
    value.integer = new_value;
    return realm_set_value(object, col, value, is_default);
}