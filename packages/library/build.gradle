plugins {
    id "org.jetbrains.kotlin.multiplatform"
    id "com.android.library"
}

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}

group Realm.group
version Realm.version

apply plugin: 'maven-publish'

// Common Kotlin configuration
kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation kotlin('reflect')
                 api(project(":cinterop"))
            }
        }

        commonTest {
            dependencies {
                implementation(kotlin("test-common"))
                implementation(kotlin("test-annotations-common"))
            }
        }
    }
}

// JVM
kotlin {
    jvm()
}

// Android configuration
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        sourceSets {
            main {
                manifest.srcFile "src/androidMain/AndroidManifest.xml"
                jniLibs.srcDir "src/androidMain/jniLibs"
                androidTest.java.srcDirs += 'src/androidTest/kotlin'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}
kotlin {
    android("android") {
        publishLibraryVariants("release", "debug")
    }
    sourceSets {
        androidMain {
            kotlin.srcDir("src/androidMain/kotlin")
            dependencies {
                api(project(":cinterop"))
            }
        }

        androidTest {
            dependencies {
                implementation(kotlin("test"))
                implementation(kotlin("test-junit"))

                implementation 'junit:junit:4.12'
                implementation 'com.android.support.test:runner:1.0.2'
                implementation 'com.android.support.test:rules:1.0.2'
                implementation(kotlin("reflect:1.4.20-M1-63"))
            }
        }
    }
}

kotlin {
    sourceSets {
        nativeCommon {
            dependencies {
                api(project(":cinterop"))
            }
        }
    }
}
// IOS Configurastion
kotlin {
    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
    iosX64("ios") {}
    sourceSets {
        iosMain {
            dependsOn nativeCommon
        }
        iosTest {}
    }
}

// Macos configuration
kotlin {
    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
    macosX64("macos") {}
    sourceSets {
        macosMain {
            dependsOn nativeCommon
        }
        macosTest {}
    }
}
// Needs running emulator
//tasks.named("iosTest") {
//    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 11 Pro Max"
//    dependsOn kotlin.targets.ios.binaries.getTest('DEBUG').linkTaskName
//    group = JavaBasePlugin.VERIFICATION_GROUP
//    description = "Runs tests for target 'ios' on an iOS simulator"
//
//    doLast {
//        def binary = kotlin.targets.ios.binaries.getTest('DEBUG').outputFile
//        exec {
//            commandLine 'xcrun', 'simctl', 'spawn', device, binary.absolutePath
//        }
//    }
//}

configurations {
    compileClasspath
}

