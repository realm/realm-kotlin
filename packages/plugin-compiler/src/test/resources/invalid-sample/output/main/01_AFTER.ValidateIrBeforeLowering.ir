// --- IR for <main> after Validate IR before lowering
MODULE_FRAGMENT name:<main>
  FILE fqName:invalid-sample.input fileName:input/InvalidSample.kt
    CLASS CLASS name:InvalidSample modality:OPEN visibility:public superTypes:[io.realm.kotlin.types.RealmObject; io.realm.kotlin.internal.RealmObjectInternal]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample
      CONSTRUCTOR visibility:public <> () returnType:invalid-sample.input.InvalidSample [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:InvalidSample modality:OPEN visibility:public superTypes:[io.realm.kotlin.types.RealmObject; io.realm.kotlin.internal.RealmObjectInternal]'
      PROPERTY name:publicName1 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:publicName1 type:kotlin.String? visibility:private
          annotations:
            PersistedName(name = '')
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-publicName1> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:publicName1 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-publicName1> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName1>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName1 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName1>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value=""
        FUN name:<set-publicName1> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:publicName1 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName1>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName1 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName1>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName1>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value=""
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName1>' type=kotlin.String? origin=null
      PROPERTY name:duplicateName1 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:duplicateName1 type:kotlin.String? visibility:private
          annotations:
            PersistedName(name = 'duplicateName1')
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-duplicateName1> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:duplicateName1 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-duplicateName1> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-duplicateName1>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-duplicateName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:duplicateName1 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-duplicateName1>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-duplicateName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value="duplicateName1"
        FUN name:<set-duplicateName1> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:duplicateName1 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-duplicateName1>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-duplicateName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:duplicateName1 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-duplicateName1>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-duplicateName1>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-duplicateName1>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value="duplicateName1"
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-duplicateName1>' type=kotlin.String? origin=null
      PROPERTY name:publicName2 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:publicName2 type:kotlin.String? visibility:private
          annotations:
            PersistedName(name = 'duplicateName2')
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-publicName2> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:publicName2 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-publicName2> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName2>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName2 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName2>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value="duplicateName2"
        FUN name:<set-publicName2> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:publicName2 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName2>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName2 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName2>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName2>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value="duplicateName2"
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName2>' type=kotlin.String? origin=null
      PROPERTY name:duplicateName2 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:duplicateName2 type:kotlin.String? visibility:private
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-duplicateName2> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:duplicateName2 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-duplicateName2> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-duplicateName2>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-duplicateName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:duplicateName2 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-duplicateName2>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-duplicateName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value="duplicateName2"
        FUN name:<set-duplicateName2> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:duplicateName2 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-duplicateName2>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-duplicateName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:duplicateName2 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-duplicateName2>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-duplicateName2>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-duplicateName2>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value="duplicateName2"
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-duplicateName2>' type=kotlin.String? origin=null
      PROPERTY name:duplicateName3 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:duplicateName3 type:kotlin.String? visibility:private
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-duplicateName3> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:duplicateName3 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-duplicateName3> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-duplicateName3>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-duplicateName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:duplicateName3 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-duplicateName3>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-duplicateName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value="duplicateName3"
        FUN name:<set-duplicateName3> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:duplicateName3 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-duplicateName3>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-duplicateName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:duplicateName3 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-duplicateName3>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-duplicateName3>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-duplicateName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value="duplicateName3"
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-duplicateName3>' type=kotlin.String? origin=null
      PROPERTY name:publicName3 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:publicName3 type:kotlin.String? visibility:private
          annotations:
            PersistedName(name = 'duplicateName3')
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-publicName3> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:publicName3 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-publicName3> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName3>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName3 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName3>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value="duplicateName3"
        FUN name:<set-publicName3> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:publicName3 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName3>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName3 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName3>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName3>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName3>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value="duplicateName3"
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName3>' type=kotlin.String? origin=null
      PROPERTY name:publicName4 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:publicName4 type:kotlin.String? visibility:private
          annotations:
            PersistedName(name = 'duplicateName4')
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-publicName4> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:publicName4 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-publicName4> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName4>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName4>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName4 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName4>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName4>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value="duplicateName4"
        FUN name:<set-publicName4> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:publicName4 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName4>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName4>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName4 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName4>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName4>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName4>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value="duplicateName4"
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName4>' type=kotlin.String? origin=null
      PROPERTY name:publicName5 visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:publicName5 type:kotlin.String? visibility:private
          annotations:
            PersistedName(name = 'duplicateName4')
          EXPRESSION_BODY
            CONST String type=kotlin.String value=""
        FUN name:<get-publicName5> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:publicName5 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-publicName5> (): kotlin.String? declared in invalid-sample.input.InvalidSample'
              BLOCK type=kotlin.String? origin=null
                VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                  CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName5>' type=invalid-sample.input.InvalidSample origin=null
                WHEN type=kotlin.String? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName5>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName5 type:kotlin.String? visibility:private' type=kotlin.String? origin=null
                      receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-publicName5>' type=invalid-sample.input.InvalidSample origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun realmValueToAny (realmValue: io.realm.kotlin.internal.interop.RealmValue): kotlin.Any? [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=kotlin.Any? origin=null
                      realmValue: CALL 'internal final fun getValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.RealmObjectHelper' type=io.realm.kotlin.internal.interop.RealmValue origin=GET_PROPERTY
                        $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                        obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<get-publicName5>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                        propertyName: CONST String type=kotlin.String value="duplicateName4"
        FUN name:<set-publicName5> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample, <set-?>:kotlin.String?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:publicName5 visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:kotlin.String?
          BLOCK_BODY
            BLOCK type=kotlin.Unit origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val]
                CALL 'public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName5>' type=invalid-sample.input.InvalidSample origin=null
              WHEN type=kotlin.Unit origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName5>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:publicName5 type:kotlin.String? visibility:private' type=kotlin.Unit origin=null
                    receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-publicName5>' type=invalid-sample.input.InvalidSample origin=null
                    value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName5>' type=kotlin.String? origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'internal final fun setValue (obj: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>, propertyName: kotlin.String, value: io.realm.kotlin.internal.interop.RealmValue): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectHelper' type=kotlin.Unit origin=GET_PROPERTY
                    $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:RealmObjectHelper modality:FINAL visibility:internal superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.RealmObjectHelper
                    obj: GET_VAR 'val tmp0_objectReference: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? [val] declared in invalid-sample.input.InvalidSample.<set-publicName5>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                    propertyName: CONST String type=kotlin.String value="duplicateName4"
                    value: CALL 'public final fun anyToRealmValue (value: kotlin.Any?): io.realm.kotlin.internal.interop.RealmValue [inline] declared in io.realm.kotlin.internal.ConvertersKt' type=io.realm.kotlin.internal.interop.RealmValue origin=null
                      value: GET_VAR '<set-?>: kotlin.String? declared in invalid-sample.input.InvalidSample.<set-publicName5>' type=kotlin.String? origin=null
      CLASS OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any; io.realm.kotlin.internal.RealmObjectCompanion]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample.Companion
        CONSTRUCTOR visibility:private <> () returnType:invalid-sample.input.InvalidSample.Companion [primary]
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
            INSTANCE_INITIALIZER_CALL classDescriptor='CLASS OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any; io.realm.kotlin.internal.RealmObjectCompanion]'
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int declared in kotlin.Any
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String declared in kotlin.Any
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN name:io_realm_kotlin_schema visibility:public modality:OPEN <> ($this:invalid-sample.input.InvalidSample.Companion) returnType:kotlin.Any
          overridden:
            public abstract fun io_realm_kotlin_schema (): io.realm.kotlin.internal.schema.RealmClassImpl declared in io.realm.kotlin.internal.RealmObjectCompanion
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample.Companion
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public open fun io_realm_kotlin_schema (): kotlin.Any declared in invalid-sample.input.InvalidSample.Companion'
              CONSTRUCTOR_CALL 'public constructor <init> (cinteropClass: io.realm.kotlin.internal.interop.ClassInfo, cinteropProperties: kotlin.collections.List<io.realm.kotlin.internal.interop.PropertyInfo>) [primary] declared in io.realm.kotlin.internal.schema.RealmClassImpl' type=io.realm.kotlin.internal.schema.RealmClassImpl origin=null
                cinteropClass: CALL 'public final fun create (name: kotlin.String, primaryKey: kotlin.String?, numProperties: kotlin.Long, isEmbedded: kotlin.Boolean): io.realm.kotlin.internal.interop.ClassInfo declared in io.realm.kotlin.internal.interop.ClassInfo.Companion' type=io.realm.kotlin.internal.interop.ClassInfo origin=null
                  $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.ClassInfo.Companion
                  name: CONST String type=kotlin.String value="InvalidSample"
                  primaryKey: CONST Null type=kotlin.Nothing? value=null
                  numProperties: CONST Long type=kotlin.Long value=8
                  isEmbedded: CONST Boolean type=kotlin.Boolean value=false
                cinteropProperties: CALL 'public final fun listOf <T> (vararg elements: T of kotlin.collections.CollectionsKt.listOf): kotlin.collections.List<T of kotlin.collections.CollectionsKt.listOf> declared in kotlin.collections.CollectionsKt' type=kotlin.collections.List<io.realm.kotlin.internal.interop.PropertyInfo> origin=null
                  <T>: io.realm.kotlin.internal.interop.PropertyInfo
                  elements: VARARG type=kotlin.Array<io.realm.kotlin.internal.interop.PropertyInfo> varargElementType=kotlin.collections.List<io.realm.kotlin.internal.interop.PropertyInfo>
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value=""
                      publicName: CONST String type=kotlin.String value="publicName1"
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value="duplicateName1"
                      publicName: CONST String type=kotlin.String value="duplicateName1"
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value="duplicateName2"
                      publicName: CONST String type=kotlin.String value="publicName2"
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value="duplicateName2"
                      publicName: CONST String type=kotlin.String value=""
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value="duplicateName3"
                      publicName: CONST String type=kotlin.String value=""
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value="duplicateName3"
                      publicName: CONST String type=kotlin.String value="publicName3"
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value="duplicateName4"
                      publicName: CONST String type=kotlin.String value="publicName4"
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
                    CALL 'public final fun create (name: kotlin.String, publicName: kotlin.String?, type: io.realm.kotlin.internal.interop.PropertyType, collectionType: io.realm.kotlin.internal.interop.CollectionType, linkTarget: kotlin.String?, linkOriginPropertyName: kotlin.String?, isNullable: kotlin.Boolean, isPrimaryKey: kotlin.Boolean, isIndexed: kotlin.Boolean): io.realm.kotlin.internal.interop.PropertyInfo declared in io.realm.kotlin.internal.interop.PropertyInfo.Companion' type=io.realm.kotlin.internal.interop.PropertyInfo origin=null
                      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=io.realm.kotlin.internal.interop.PropertyInfo.Companion
                      name: CONST String type=kotlin.String value="duplicateName4"
                      publicName: CONST String type=kotlin.String value="publicName5"
                      type: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_PROPERTY_TYPE_STRING' type=io.realm.kotlin.internal.interop.PropertyType
                      collectionType: GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:RLM_COLLECTION_TYPE_NONE' type=io.realm.kotlin.internal.interop.CollectionType
                      linkTarget: CONST String type=kotlin.String value=""
                      linkOriginPropertyName: CONST String type=kotlin.String value=""
                      isNullable: CONST Boolean type=kotlin.Boolean value=true
                      isPrimaryKey: CONST Boolean type=kotlin.Boolean value=false
                      isIndexed: CONST Boolean type=kotlin.Boolean value=false
        FUN name:io_realm_kotlin_newInstance visibility:public modality:OPEN <> ($this:invalid-sample.input.InvalidSample.Companion) returnType:kotlin.Any
          overridden:
            public abstract fun io_realm_kotlin_newInstance (): kotlin.Any declared in io.realm.kotlin.internal.RealmObjectCompanion
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample.Companion
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public open fun io_realm_kotlin_newInstance (): kotlin.Any declared in invalid-sample.input.InvalidSample.Companion'
              CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in invalid-sample.input.InvalidSample' type=invalid-sample.input.InvalidSample origin=null
        PROPERTY name:io_realm_kotlin_className visibility:public modality:FINAL [var]
          FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_className type:kotlin.String visibility:private
            EXPRESSION_BODY
              CONST String type=kotlin.String value="InvalidSample"
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-io_realm_kotlin_className> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample.Companion) returnType:kotlin.String
            correspondingProperty: PROPERTY name:io_realm_kotlin_className visibility:public modality:FINAL [var]
            overridden:
              public abstract fun <get-io_realm_kotlin_className> (): kotlin.String declared in io.realm.kotlin.internal.RealmObjectCompanion
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='public final fun <get-io_realm_kotlin_className> (): kotlin.String declared in invalid-sample.input.InvalidSample.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_className type:kotlin.String visibility:private' type=kotlin.String origin=null
                  receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample.Companion declared in invalid-sample.input.InvalidSample.Companion.<get-io_realm_kotlin_className>' type=invalid-sample.input.InvalidSample.Companion origin=null
        PROPERTY name:io_realm_kotlin_fields visibility:public modality:FINAL [var]
          FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_fields type:kotlin.collections.Map<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> visibility:private
            EXPRESSION_BODY
              CALL 'public final fun mapOf <K, V> (vararg pairs: kotlin.Pair<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf>): kotlin.collections.Map<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf> declared in kotlin.collections.MapsKt' type=kotlin.collections.Map<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                <K>: kotlin.String
                <V>: kotlin.reflect.KProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                pairs: VARARG type=kotlin.Array<kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>>> varargElementType=kotlin.collections.Map<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>>
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value=""
                    second: PROPERTY_REFERENCE 'public final publicName1: kotlin.String? [var]' field=null getter='public final fun <get-publicName1> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-publicName1> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value="duplicateName1"
                    second: PROPERTY_REFERENCE 'public final duplicateName1: kotlin.String? [var]' field=null getter='public final fun <get-duplicateName1> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-duplicateName1> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value="duplicateName2"
                    second: PROPERTY_REFERENCE 'public final publicName2: kotlin.String? [var]' field=null getter='public final fun <get-publicName2> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-publicName2> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value="duplicateName2"
                    second: PROPERTY_REFERENCE 'public final duplicateName2: kotlin.String? [var]' field=null getter='public final fun <get-duplicateName2> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-duplicateName2> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value="duplicateName3"
                    second: PROPERTY_REFERENCE 'public final duplicateName3: kotlin.String? [var]' field=null getter='public final fun <get-duplicateName3> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-duplicateName3> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value="duplicateName3"
                    second: PROPERTY_REFERENCE 'public final publicName3: kotlin.String? [var]' field=null getter='public final fun <get-publicName3> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-publicName3> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value="duplicateName4"
                    second: PROPERTY_REFERENCE 'public final publicName4: kotlin.String? [var]' field=null getter='public final fun <get-publicName4> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-publicName4> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  CONSTRUCTOR_CALL 'public constructor <init> (first: A of kotlin.Pair, second: B of kotlin.Pair) [primary] declared in kotlin.Pair' type=kotlin.Pair<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                    <class: A>: kotlin.String
                    <class: B>: kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>
                    first: CONST String type=kotlin.String value="duplicateName4"
                    second: PROPERTY_REFERENCE 'public final publicName5: kotlin.String? [var]' field=null getter='public final fun <get-publicName5> (): kotlin.String? declared in invalid-sample.input.InvalidSample' setter='public final fun <set-publicName5> (<set-?>: kotlin.String?): kotlin.Unit declared in invalid-sample.input.InvalidSample' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-io_realm_kotlin_fields> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample.Companion) returnType:kotlin.collections.Map<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>>
            correspondingProperty: PROPERTY name:io_realm_kotlin_fields visibility:public modality:FINAL [var]
            overridden:
              public abstract fun <get-io_realm_kotlin_fields> (): kotlin.collections.Map<kotlin.String, kotlin.reflect.KProperty1<io.realm.kotlin.types.BaseRealmObject, kotlin.Any?>> declared in io.realm.kotlin.internal.RealmObjectCompanion
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='public final fun <get-io_realm_kotlin_fields> (): kotlin.collections.Map<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> declared in invalid-sample.input.InvalidSample.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_fields type:kotlin.collections.Map<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> visibility:private' type=kotlin.collections.Map<kotlin.String, kotlin.reflect.KMutableProperty1<io.realm.kotlin.types.RealmObject, kotlin.Any?>> origin=null
                  receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample.Companion declared in invalid-sample.input.InvalidSample.Companion.<get-io_realm_kotlin_fields>' type=invalid-sample.input.InvalidSample.Companion origin=null
        PROPERTY name:io_realm_kotlin_primaryKey visibility:public modality:FINAL [var]
          FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_primaryKey type:kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> visibility:private
            EXPRESSION_BODY
              CONST Null type=kotlin.Nothing? value=null
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-io_realm_kotlin_primaryKey> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample.Companion) returnType:kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?>
            correspondingProperty: PROPERTY name:io_realm_kotlin_primaryKey visibility:public modality:FINAL [var]
            overridden:
              public abstract fun <get-io_realm_kotlin_primaryKey> (): kotlin.reflect.KMutableProperty1<*, *>? declared in io.realm.kotlin.internal.RealmObjectCompanion
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='public final fun <get-io_realm_kotlin_primaryKey> (): kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> declared in invalid-sample.input.InvalidSample.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_primaryKey type:kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> visibility:private' type=kotlin.reflect.KMutableProperty1<invalid-sample.input.InvalidSample, kotlin.Any?> origin=null
                  receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample.Companion declared in invalid-sample.input.InvalidSample.Companion.<get-io_realm_kotlin_primaryKey>' type=invalid-sample.input.InvalidSample.Companion origin=null
        PROPERTY name:io_realm_kotlin_isEmbedded visibility:public modality:FINAL [var]
          FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_isEmbedded type:kotlin.Boolean visibility:private
            EXPRESSION_BODY
              CONST Boolean type=kotlin.Boolean value=false
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-io_realm_kotlin_isEmbedded> visibility:public modality:FINAL <> ($this:invalid-sample.input.InvalidSample.Companion) returnType:kotlin.Boolean
            correspondingProperty: PROPERTY name:io_realm_kotlin_isEmbedded visibility:public modality:FINAL [var]
            overridden:
              public abstract fun <get-io_realm_kotlin_isEmbedded> (): kotlin.Boolean declared in io.realm.kotlin.internal.RealmObjectCompanion
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='public final fun <get-io_realm_kotlin_isEmbedded> (): kotlin.Boolean declared in invalid-sample.input.InvalidSample.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_isEmbedded type:kotlin.Boolean visibility:private' type=kotlin.Boolean origin=null
                  receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample.Companion declared in invalid-sample.input.InvalidSample.Companion.<get-io_realm_kotlin_isEmbedded>' type=invalid-sample.input.InvalidSample.Companion origin=null
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in io.realm.kotlin.types.RealmObject
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in io.realm.kotlin.types.RealmObject
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in io.realm.kotlin.types.RealmObject
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      PROPERTY name:io_realm_kotlin_objectReference visibility:public modality:OPEN [var]
        FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? visibility:private
          EXPRESSION_BODY
            CONST Null type=kotlin.Nothing? value=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-io_realm_kotlin_objectReference> visibility:public modality:OPEN <> ($this:invalid-sample.input.InvalidSample) returnType:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>?
          correspondingProperty: PROPERTY name:io_realm_kotlin_objectReference visibility:public modality:OPEN [var]
          overridden:
            public abstract fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>? declared in io.realm.kotlin.internal.RealmObjectInternal
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public open fun <get-io_realm_kotlin_objectReference> (): io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? visibility:private' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
                receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<get-io_realm_kotlin_objectReference>' type=invalid-sample.input.InvalidSample origin=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<set-io_realm_kotlin_objectReference> visibility:public modality:OPEN <> ($this:invalid-sample.input.InvalidSample, <set-?>:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>?) returnType:kotlin.Unit
          correspondingProperty: PROPERTY name:io_realm_kotlin_objectReference visibility:public modality:OPEN [var]
          overridden:
            public abstract fun <set-io_realm_kotlin_objectReference> (<set-?>: io.realm.kotlin.internal.RealmObjectReference<out io.realm.kotlin.types.BaseRealmObject>?): kotlin.Unit declared in io.realm.kotlin.internal.RealmObjectInternal
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:invalid-sample.input.InvalidSample
          VALUE_PARAMETER name:<set-?> index:0 type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>?
          BLOCK_BODY
            SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:io_realm_kotlin_objectReference type:io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? visibility:private' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: invalid-sample.input.InvalidSample declared in invalid-sample.input.InvalidSample.<set-io_realm_kotlin_objectReference>' type=invalid-sample.input.InvalidSample origin=null
              value: GET_VAR '<set-?>: io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? declared in invalid-sample.input.InvalidSample.<set-io_realm_kotlin_objectReference>' type=io.realm.kotlin.internal.RealmObjectReference<invalid-sample.input.InvalidSample>? origin=null
