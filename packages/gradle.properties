#
# Copyright 2020 Realm Inc.
#  
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#  
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

org.gradle.jvmargs=-Xms512m -Xmx2048m
kotlin.mpp.stability.nowarn=true

kotlin.code.style=official
android.useAndroidX=true

# See https://kotlinlang.org/docs/whatsnew18.html#configuration-and-setup
kotlin.mpp.androidSourceSetLayoutVersion=2

# Realm Kotlin build options
#
# See https://kotlinlang.org/docs/multiplatform-publish-lib.html
# The main host is responsible for publishing the KMP metadata needed to lookup platform specific
# artifacts. During a publishing process, one host is _required_ to be the main host.
#
# If this property is commented out, the build will publish all publications regardless of what
# `realm.kotlin.targets` is.
realm.kotlin.mainHost=true

# Which publications to publish. Allowed values are:
#   - iosArm64
#   - iosSimulatorArm64
#   - iosX64
#   - jvm
#   - macos
#   - macosArm64
#   - android
#   - gradlePlugin
#   - compilerPlugin
#
# If not set, all publications will be published. `metadata` is also a publication but
# is controlled independently by the `realm.kotlin.mainHost` property.
#
# realm.kotlin.targets=<CommaSeperatedListOfPublications>

# Whether or not to build Realm Core on the platform running the build.
# This can be used to prevent certain targets transentively starting a
# native build, which can easily take 30+ minutes. This is e.g. relevant
# when only building docs or compiler/gradle plugins.
realm.kotlin.buildRealmCore=true

# Comma-seperated list of pre-built JVM native files that should be copied into place, making them
# ready to run or package into the final JVM JARs.
#
# If the list is empty, no files are copied, and must instead be built locally.
#
# The following options are allowed and will copy the prebuilt file if it is placed in the defined location.
# If a platform is enabled, but the file doesn't exist, then the build will crash.
# 
# - macos: <root>/packages/cinterop/build/realmMacOsBuild/librealmc.dylib
# - linux: <root>/packages/cinterop/build/realmWindowsBuild/librealmc.so
# - windows: <root>/packages/cinterop/build/realmWindowsBuild/Release/realmc.dll
realm.kotlin.copyNativeJvmLibs=

# See https://kotlinlang.org/docs/mpp-publish-lib.html#publish-an-android-library
# Allow the default dependency name to match the client debug build type. Otherwise the client project has to
# explicitly specify the debug variant (ex: implementation("io.realm.kotlin:library-base-debug:0.8.0"))
kotlin.android.buildTypeAttribute.keep=false

# Project setup - See './CONTRIBUTING.md' for description of the project structure and various options.
# includeSdkModules=true
# includeTestModules=true
# Test repository path must be a relative path to the `packages` folder and defined with Linux line seperators.
testRepository=build/m2-buildrepo/
# Must either be `debug` or `debugMinified`
testBuildType=debug

# Properties controlling which test server to run sync tests against. Default is a local
# test server that has been started by calling `<root>/tools/sync_test_server/start_local_server.sh`
syncTestUrl=http://localhost:9090
syncTestAppNamePrefix=test-app
syncTestLoginEmail=unique_user@domain.com
syncTestLoginPassword=password

# If the public/private apiKey is set, it will take precedence when logging into the Admin API that controls the app
# syncTestUrl=https://realm-qa.mongodb.com
# syncTestLoginPublicApiKey=replace-with-value
# synctestLoginPrivateApiKey=replace-with-value
# syncTestClusterName=replace-with-value
android.disableAutomaticComponentCreation=true
